// Создайте простой элемент JSX
// React — это библиотека представлений с открытым исходным кодом, созданная и поддерживаемая Facebook. Это отличный инструмент для визуализации пользовательского интерфейса (UI) современных веб-приложений.

// React использует синтаксическое расширение JavaScript под названием JSX, которое позволяет писать HTML непосредственно внутри JavaScript. Это имеет несколько преимуществ. Он позволяет вам использовать всю программную мощь JavaScript в HTML и помогает сохранить читабельность вашего кода. По большей части JSX похож на HTML, который вы уже изучили, однако есть несколько ключевых отличий, которые будут рассмотрены в ходе этих задач.

// Например, поскольку JSX является синтаксическим расширением JavaScript, вы можете писать JavaScript непосредственно внутри JSX. Для этого вы просто включаете код, который хотите рассматривать как JavaScript, в фигурные скобки: { 'this is treated as JavaScript code' }. Имейте это в виду, поскольку оно будет использоваться в нескольких будущих испытаниях.

// Однако, поскольку JSX не является допустимым JavaScript, код JSX необходимо скомпилировать в JavaScript. Транспилятор Babel — популярный инструмент для этого процесса. Для вашего удобства для этих испытаний уже добавлено «за кулисами». Если вам случится написать синтаксически неверный JSX, вы увидите, что первый тест в этих задачах не пройден.

// Стоит отметить, что под капотом стоят проблемы ReactDOM.render(JSX, document.getElementById('root')). Этот вызов функции помещает ваш JSX в собственное облегченное представление DOM в React. Затем React использует снимки своего собственного DOM, чтобы оптимизировать обновление только определенных частей фактического DOM.

// Текущий код использует JSX для присвоения divэлемента константе JSX. Замените divэлемент h1и добавьте текст Hello JSX!внутри него.

const JSX = <h1>Hello JSX!</h1>;