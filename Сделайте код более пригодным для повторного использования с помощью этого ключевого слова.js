// Последняя задача представила метод объекту duck. duck.nameДля доступа к значению свойства nameв операторе return использовалась запись через точку:

// sayName: function() {return "The name of this duck is " + duck.name + ".";}
// Хотя это допустимый способ доступа к свойству объекта, здесь есть подводный камень. Если имя переменной изменится, любой код, ссылающийся на исходное имя, также необходимо будет обновить. В кратком определении объекта это не проблема, но если объект имеет много ссылок на свои свойства, вероятность ошибки возрастает.

// Чтобы избежать этих проблем, используйте thisключевое слово:

// let duck = {
//   name: "Aflac",
//   numLegs: 2,
//   sayName: function() {return "The name of this duck is " + this.name + ".";}
// };
// this— это глубокая тема, и приведенный выше пример — лишь один из способов ее использования. В текущем контексте thisотносится к объекту, с которым связан метод: duck. Если имя объекта изменено на mallard, нет необходимости искать все ссылки на него duckв коде. Это делает код многоразовым и его легче читать.

// Измените dog.sayLegsметод, чтобы удалить все ссылки на dog. Используйте duckпример для руководства.


let dog = {
    name: "Spot",
    numLegs: 4,
    sayLegs: function() {return "This dog has " + this.numLegs + " legs.";}
  };
  
  dog.sayLegs();